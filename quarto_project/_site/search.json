[
  {
    "objectID": "data_analysis.html",
    "href": "data_analysis.html",
    "title": "Data Analysis",
    "section": "",
    "text": "data_analysis.qmd\nimport pandas as pd\ndf = pd.read_csv(“lightcast_job_postings.csv”)\nprint(df.head()) print(df.info())\ncolumns_to_drop = [ “ID”, “URL”, “ACTIVE_URLS”, “DUPLICATES”, “LAST_UPDATED_TIMESTAMP”, “NAICS2”, “NAICS3”, “NAICS4”, “NAICS5”, “NAICS6”, “SOC_2”, “SOC_3”, “SOC_5”]\ndf.drop(columns=columns_to_drop, inplace=True)\nprint(“Updated DataFrame columns:”, df.columns.tolist())\nmissing_percent = df.isnull().mean() * 100 missing_percent = missing_percent[missing_percent &gt; 0].sort_values(ascending=False)\nimport pandas as pd import matplotlib.pyplot as plt\nimport missingno as msno\ndf = pd.read_csv(“lightcast_job_postings.csv”)\nmsno.heatmap(df) plt.title(“Missing Values Heatmap”) plt.show()\ndf[“SALARY”].fillna(df[“SALARY”].median(), inplace=True) df[“CITY_NAME”].fillna(“Unknown”, inplace=True) df.dropna(thresh=len(df) * 0.5, axis=1, inplace=True)\n\n1 Remove duplicates based on key columns\ndf = df.drop_duplicates( subset=[“TITLE”, “COMPANY”, “LOCATION”, “POSTED”], keep=“first” )\n\n\n2 Verify remaining rows\nprint(f”Total entries after deduplication: {len(df)}“)\nimport plotly.express as px\nfig = px.bar(df[“CITY_NAME”].value_counts(), title=“Job Postings by city”) fig.show()\nfig = px.box(df, x=“CITY_NAME”, y=“SALARY”, title=“Salary() Distribution by city”) fig.show()\nfig = px.pie(df, names=“REMOTE_TYPE_NAME”, title=“Remote vs. On-Site Jobs”) fig.show()"
  }
]